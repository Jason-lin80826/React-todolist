{"version":3,"sources":["TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoContent","props","isDone","TodoButtonWrapper","Button","button","TodoItem","useRef","React","todo","handleDelete","handleStatus","handleUpdate","completeUpdate","id","isUpdate","content","ref","defaultValue","style","display","onClick","newContent","current","value","App","useState","todos","setTodo","condition","setCondition","inputEl","filter","map","className","placeholder","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed3464cc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TodoItemWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 8px 16px;\r\n  border: 1px black solid;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst TodoContent = styled.div`\r\n  color: rgb(2, 40, 77);\r\n  ${(props) =>\r\n    props.isDone === true &&\r\n    `\r\n    color: red;\r\n    text-decoration:line-through;\r\n  `}\r\n`;\r\nconst TodoButtonWrapper = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  padding: 4px;\r\n  color: black;\r\n\r\n  &:hover {\r\n    color: red;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 4px;\r\n  }\r\n`;\r\n\r\nexport default function TodoItem(props) {\r\n  const { useRef } = React;\r\n  const { todo, handleDelete, handleStatus, handleUpdate, completeUpdate } =\r\n    props;\r\n  const { id, isDone, isUpdate } = todo;\r\n\r\n  const content = useRef(\"\");\r\n\r\n  const handleClick = () => {\r\n    const newContent = content.current.value;\r\n    completeUpdate(id, newContent, isDone);\r\n  };\r\n  return (\r\n    <TodoItemWrapper>\r\n      <input\r\n        ref={content}\r\n        defaultValue={todo.content}\r\n        style={isUpdate ? { display: \"block\" } : { display: \"none\" }}\r\n      />\r\n      {isUpdate ? (\r\n        \"\"\r\n      ) : (\r\n        <TodoContent isDone={isDone}>{todo.content}</TodoContent>\r\n      )}\r\n      <TodoButtonWrapper>\r\n        {isUpdate ? (\r\n          <Button onClick={handleClick}>完成</Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => {\r\n              handleUpdate(id);\r\n            }}\r\n          >\r\n            編輯\r\n          </Button>\r\n        )}\r\n        <Button\r\n          onClick={() => {\r\n            handleStatus(id);\r\n          }}\r\n        >\r\n          {isDone ? \"已完成\" : \"未完成\"}\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            handleDelete(id);\r\n          }}\r\n        >\r\n          刪除\r\n        </Button>\r\n      </TodoButtonWrapper>\r\n    </TodoItemWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  padding: 4px;\n  color: black;\n\n  & + & {\n    margin-left: 4px;\n  }\n`;\n\nfunction App() {\n  const { useState, useRef } = React;\n  const [todos, setTodo] = useState([]);\n  const [condition, setCondition] = useState(\"all\");\n  const inputEl = useRef(null);\n  const id = useRef(0);\n\n  const handleAdd = () => {\n    if (!inputEl.current.value) {\n      return alert(\"請輸入內容\");\n    }\n    setTodo([\n      ...todos,\n      {\n        id: id.current,\n        content: inputEl.current.value,\n        isDone: false,\n        isUpdate: false,\n      },\n    ]);\n    id.current++;\n    inputEl.current.value = \"\";\n  };\n\n  const handleDelete = (id) => {\n    setTodo(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleStatus = (id) => {\n    setTodo(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n          isUpdate: false,\n        };\n      })\n    );\n  };\n\n  const handleUpdate = (id) => {\n    setTodo(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isUpdate: true,\n        };\n      })\n    );\n  };\n\n  const completeUpdate = (id, newContent, isDone) => {\n    setTodo(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          id,\n          content: newContent,\n          isDone,\n          isUpdate: false,\n        };\n      })\n    );\n  };\n\n  const deleteALL = () => {\n    setTodo([]);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <input ref={inputEl} placeholder=\"請輸入\" />\n        <button onClick={handleAdd}>新增</button>\n        {todos\n          .filter((todo) => {\n            return condition === \"all\"\n              ? todo\n              : condition === \"done\"\n              ? todo.isDone\n              : !todo.isDone;\n          })\n          .map((todo) => {\n            return (\n              <TodoItem\n                todo={todo}\n                key={todo.id}\n                handleDelete={handleDelete}\n                handleStatus={handleStatus}\n                handleUpdate={handleUpdate}\n                completeUpdate={completeUpdate}\n              />\n            );\n          })}\n      </div>\n      <Button onClick={deleteALL}>清空</Button>\n      <Button\n        onClick={() => {\n          setCondition(\"all\");\n        }}\n      >\n        全部\n      </Button>\n      <Button\n        onClick={() => {\n          setCondition(\"done\");\n        }}\n      >\n        已完成\n      </Button>\n      <Button\n        onClick={() => {\n          setCondition(\"pending\");\n        }}\n      >\n        未完成\n      </Button>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}